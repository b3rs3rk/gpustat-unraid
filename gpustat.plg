<?xml version='1.0' standalone='yes'?>
<!DOCTYPE PLUGIN [
<!ENTITY name      "gpustat">
<!ENTITY author    "b3rs3rk">
<!ENTITY version   "2021.01.21">
<!ENTITY launch    "Settings/GPUStatSettings">
<!ENTITY gitURL    "https://raw.githubusercontent.com/b3rs3rk/&name;-unraid/master">
<!ENTITY pluginURL "&gitURL;/&name;.plg">
<!ENTITY pkgURL    "&gitURL;/pkg">
<!ENTITY plgPATH   "/boot/config/plugins/&name;">
<!ENTITY plgNAME   "&name;-&version;-x86_64">
<!ENTITY emhttp    "/usr/local/emhttp/plugins/&name;">
]>

<PLUGIN
    name="&name;"
    author="&author;"
    version="&version;"
    min="6.7.1"
    support="https://forums.unraid.net/topic/89453-plugin-gpu-statistics/"
    icon="icon-hardware"
    launch="&launch;"
    pluginURL="&pluginURL;"
>

<!--
  MIT License

  Copyright (c) 2020-2021 b3rs3rk

  Permission is hereby granted, free of charge, to any person obtaining a copy
  of this software and associated documentation files (the "Software"), to deal
  in the Software without restriction, including without limitation the rights
  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  copies of the Software, and to permit persons to whom the Software is
  furnished to do so, subject to the following conditions:

  The above copyright notice and this permission notice shall be included in all
  copies or substantial portions of the Software.

  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
  SOFTWARE.
-->

<CHANGES>
###2021-01-21
- Fix for error messages on the system console after a boot

###2021-01-20
- [RELEASE] Basic App Support
 * Fix PCI Util bug with older Nvidia GPUs
 * Make metric collections settings deterministic
 * Refactor error methodology
 * Segmentation of scripts and styles from page code
 * Refactor dashboard update code (replaced setTimeout recursion)

###2021-01-17
- [RELEASE] Various fixes
 * Implement PCI Utilization slider for NVIDIA
 * Fix issue with plugin not installing on boot

###2021-01-15
- Fix for default settings fiasco

###2021-01-13
- [RELEASE] Implement iGPU Support
 * Slight Nvidia changes to reduce plugin size with all metrics enabled
 * Add PCI/IMC Bus Utilization for NVIDIA/Intel
 * Make dashboard refresh interval configurable
 * Thanks to @ich777 for all of his help in testing Intel

###2021-01-08
- [RELEASE] Switch to slider bars instead of raw data output
 * GPUStat plugin now refreshes data on 6.9
 * Thanks to @mlapaglia for the contribution

###2020-04-18
- [BETA] Allow User selectable metrics to be displayed in widget
 * Go to settings and select the desired metrics after update

###2020-03-14
- [BETA] Implement Multi-GPU Selectability
 * Select desired GPU for dashboard display from retrieved inventory
 * Select desired temperature format (F/C)

###2020-03-10
- [BETA] Implement more NVIDIA data readings
 * Clock Speeds (GPU/MEM)
 * Encoder/Decoder Utilization
 * Power State (P0-8)
 * Throttle Check/Reason

###2020-03-08
- [BETA] Fix formatting to be more UnRAID-like

###2020-03-06
- [BETA] Implements basic NVIDIA Support for single-GPU systems
</CHANGES>

 <!-- The 'pre-install' script. -->
<FILE Run="/bin/bash">
<INLINE>

if [ "$(which nvidia-smi 2>/dev/null)" ] || [ -d /boot/config/plugins/nvidia-driver ]; then
	echo "********************************************************************"
	echo
	echo "NVIDIA vendor utility found. Continuing install."
	echo
	echo "********************************************************************"
elif [ "$(which intel_gpu_top 2>/dev/null)" ] || [ -d /boot/config/plugins/intel-gpu-top ]; then
	echo "********************************************************************"
	echo
	echo "Intel vendor utility found. Continuing install."
	echo
	echo "********************************************************************"
else
	echo "********************************************************************"
	echo
	echo "No vendor utilities found.  Plugin install terminated due to failed prerequisites."
	echo
	echo "********************************************************************"
    rm -rf /boot/config/plugins/&name;
	exit 1
fi

</INLINE>
</FILE>

 <!-- The 'source' file. -->
 <FILE Name="&plgPATH;/&plgNAME;.txz" Min="6.4" Run="upgradepkg --install-new">
  <URL>&pkgURL;/&plgNAME;.txz</URL>
 </FILE>

 <!-- Install default plugin cfg  -->
 <FILE Name="/boot/config/plugins/gpustat/gpustat.cfg">
  <INLINE>
   <![CDATA[
    VENDOR=""
    GPUID=""
    TEMPFORMAT=C
    DISPCLOCKS="1"
    DISPENCDEC="1"
    DISPPCIUTIL="1"
    DISPTEMP="1"
    DISPFAN="1"
    DISPPWRDRAW="1"
    DISPPWRSTATE="1"
    DISPTHROTTLE="1"
    DISPSESSIONS="1"
    UIREFRESH="1"
    UIREFRESHINT="1000"
    DISPMEMUTIL="1"
    DISP3DRENDER="1"
    DISPBLITTER="1"
    DISPVIDEO="1"
    DISPVIDENH="1"
    DISPINTERRUPT="1"
   ]]>
  </INLINE>
 </FILE>

  <!-- The 'remove' script. -->
  <FILE Run="/bin/bash" Method="remove">
   <INLINE>
    echo "Removing &name;..."
    removepkg &plgPATH;/*.txz
    rm -rf &plgPATH;
    rm -rf &emhttp;
    echo "&name; has been removed"
   </INLINE>
  </FILE>
</PLUGIN>
